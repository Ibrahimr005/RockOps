package com.example.backend.models.transaction;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;
import java.util.UUID;

/**
 * Comprehensive audit trail for warehouse â†” equipment transaction changes.
 * Tracks every state change, quantity modification, and user action for complete traceability.
 */
@Entity
@Table(name = "transaction_history")
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class TransactionHistory {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private UUID id;

    /**
     * Reference to the main transaction
     */
    @Column(name = "transaction_id", nullable = false)
    private UUID transactionId;

    /**
     * Reference to specific transaction item (optional - for item-level changes)
     */
    @Column(name = "transaction_item_id")
    private UUID transactionItemId;

    /**
     * Previous status before the change
     */
    @Column(name = "previous_status", length = 50)
    private String previousStatus;

    /**
     * New status after the change
     */
    @Column(name = "new_status", length = 50)
    private String newStatus;

    /**
     * Equipment-specific status (using EquipmentTransactionStatus)
     */
    @Column(name = "equipment_status", length = 50)
    @Enumerated(EnumType.STRING)
    private EquipmentTransactionStatus equipmentStatus;

    /**
     * Type of change that occurred
     */
    @Column(name = "change_type", nullable = false, length = 50)
    private String changeType; // TRANSACTION_CREATED, ITEM_ACCEPTANCE, ITEM_REJECTION, STATUS_CHANGE, QUANTITY_ADJUSTMENT

    /**
     * Previous quantity (for quantity-related changes)
     */
    @Column(name = "previous_quantity")
    private Integer previousQuantity;

    /**
     * New quantity (for quantity-related changes)
     */
    @Column(name = "new_quantity")
    private Integer newQuantity;

    /**
     * Reason for the change
     */
    @Column(name = "reason", columnDefinition = "TEXT")
    private String reason;

    /**
     * User who made the change
     */
    @Column(name = "changed_by", nullable = false)
    private String changedBy;

    /**
     * Timestamp when the change occurred
     */
    @Column(name = "changed_at", nullable = false)
    private LocalDateTime changedAt;

    /**
     * IP address of the user who made the change
     */
    @Column(name = "ip_address", length = 45)
    private String ipAddress;

    /**
     * User agent string for additional context
     */
    @Column(name = "user_agent", length = 500)
    private String userAgent;

    /**
     * Additional metadata in JSON format
     */
    @Column(name = "additional_data", columnDefinition = "TEXT")
    private String additionalData;

    /**
     * Whether this change was generated by the system vs. manual user action
     */
    @Column(name = "is_system_generated")
    @Builder.Default
    private Boolean isSystemGenerated = false;

    @PrePersist
    protected void onCreate() {
        if (changedAt == null) {
            changedAt = LocalDateTime.now();
        }
    }
} 