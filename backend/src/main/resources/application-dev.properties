spring.application.name=backend-dev

# Database Configuration - Render Dev Database
spring.datasource.url=${DATABASE_URL}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.docker.compose.enabled=false

# JPA & Hibernate Configuration for Development
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Development settings to handle schema issues
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.hbm2ddl.halt_on_error=false

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# CORS Configuration - For Vercel dev deployment
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:https://rockops-git-dev-ibrahimr005.vercel.app,http://localhost:3000}

# Storage Configuration - AWS S3 with dev prefix
storage.type=s3
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME:rockops}
aws.s3.region=${AWS_S3_REGION:us-east-1}
aws.s3.enabled=true
aws.s3.public-url=${AWS_S3_PUBLIC_URL:}

# Dev file prefix to separate from production
aws.s3.file-prefix=dev/

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.file-size-threshold=2KB

# Management endpoints
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Server Configuration
server.port=${PORT:8080}

# Logging for development debugging
logging.level.com.example.backend=DEBUG
logging.level.org.springframework.security=INFO